{"version":3,"sources":["routes/history.js","store/ducks/character.js","store/ducks/index.js","store/sagas/Api.js","store/sagas/character.js","store/sagas/index.js","store/index.js","components/cardCharacter/index.js","components/pagination/index.js","pages/home/index.js","pages/search/index.js","components/header/index.js","routes/index.js","App.js","serviceWorker.js","index.js","assets/Breaking_Bad_logo.svg"],"names":["history","createHashHistory","Types","REQUEST_SEARCH","SUCCESS","FAILURE","RESET_SEARCH_LIST","REQUEST_LIST","ADD_SEARCH_LIST","INITIAL_STATE","data","loading","error","searchTerm","searchResults","character","state","action","type","payload","name","console","log","Actions","page","createRootReducer","combineReducers","router","connectRouter","Api","axios","create","baseURL","headers","requestCharacterByNameGeneral","requestCharacterByName","requestCharactersList","namesCharacters","require","limitListPerPage","getCharacterList","get","getCharacterByName","put","push","all","map","nameList","indexOf","toLowerCase","call","nameWithoutSpace","replace","response","status","message","characterSagas","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","routeMiddleware","routerMiddleware","store","createStore","compose","applyMiddleware","run","CardCharacter","props","item","image","img","class","text","className","src","alt","birthday","occupation","join","Pagination","dispatch","useDispatch","useState","pageActive","setPage","pagesNum","i","Math","ceil","length","indx","key","href","onClick","e","preventDefault","handleSetPage","Home","characters","useSelector","onDidMount","useEffect","fluid","index","xs","s","style","margin","Search","searchList","sm","md","lg","Header","handleSearch","setSearch","to","breakingBadLogo","height","placeholder","onChange","target","value","onKeyDown","Routes","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d555d3fa.chunk.js","sourcesContent":["import { createHashHistory } from \"history\";\n\nconst history = createHashHistory();\n\nexport default history;\n","/**\n * Types\n * **/\nexport const Types = {\n  REQUEST_SEARCH: \"character/REQUEST_SEARCH\",\n  SUCCESS: \"character/SUCCESS_REQUEST\",\n  FAILURE: \"character/FAILURE_REQUEST\",\n  RESET_SEARCH_LIST: \"character/RESET_SEARCH_LIST\",\n\n  REQUEST_LIST: \"character/REQUEST_LIST\",\n  ADD_SEARCH_LIST: \"character/ADD_SEARCH_LIST\",\n};\n\n/**\n * Handlers\n * **/\nconst INITIAL_STATE = {\n  data: {},\n  loading: false,\n  error: null,\n  searchTerm: null,\n  searchResults: []\n};\n\n/**\n * Reducer\n */\nexport default function character(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Types.REQUEST_LIST:\n      return { ...state, loading: true };\n    case Types.REQUEST_SEARCH:\n      return { ...state, loading: true, searchTerm: action.payload.name };\n    case Types.SUCCESS:\n      return { data: action.payload, loading: false, error: false };\n    case Types.FAILURE:\n      return { data: [], loading: false, error: true };\n    case Types.RESET_SEARCH_LIST:\n      return { ...state, searchResults: [] };\n    case Types.ADD_SEARCH_LIST:\n      console.log({ ...state, searchResults: [...state.searchResults, ...action.payload] }); return { ...state, searchResults: [...state.searchResults, ...action.payload] };\n    default:\n      return state;\n  }\n}\n\n/**\n *  Actions\n */\nexport const Actions = {\n  requestSearch: name => {\n    return {\n      type: Types.REQUEST_SEARCH,\n      payload: {\n        name\n      }\n    };\n  },\n  requestListCharacter: page => {\n    return {\n      type: Types.REQUEST_LIST,\n      payload: {\n        page\n      }\n    };\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from 'connected-react-router'\n\nimport character from \"./character\";\n\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  character\n})\nexport default createRootReducer","import axios from 'axios';\n\nconst Api = axios.create({\n\n    baseURL: 'https://www.breakingbadapi.com/api/',\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport default Api;","//Import action from ducks\nimport { Types } from '../ducks/character';\nimport Api from './Api';\n//Saga effects\nimport { put, call, takeLatest, all } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nconst namesCharacters = require('../../utils/namesCharacters.json');\nconst limitListPerPage = 8;\n\nfunction getCharacterList(action) {\n    return Api.get(`characters?limit=${limitListPerPage}&offset=${action.payload.page * limitListPerPage}`);\n}\n/** \n * Function exportada para Teste no arquivo 'character.saga.test.js'  \n * */\nexport function getCharacterByName(name) {\n    return Api.get(`characters?name=${name}`);\n}\n\n\nfunction* requestCharacterByNameGeneral(action) {\n    /** \n     * Reset Search\n    */\n    yield put({ type: Types.RESET_SEARCH_LIST });\n    /**\n     * Redirecionando para a página de Search\n     */\n    yield put(push('/search'))\n    yield all(namesCharacters.map(nameList => {\n        return (nameList.indexOf(action.payload.name.toLowerCase()) !== -1) ? call(requestCharacterByName, nameList) : true;\n    }));\n    /** Loading Finish Action **/\n}\n/** \n * Function exportada para Teste no arquivo 'character.saga.test.js' \n * @param name: String\n * \n * */\nexport function* requestCharacterByName(name) {\n    try {\n        const nameWithoutSpace = name.replace(/\\s+/g, \"+\");\n\n        let response = yield call(getCharacterByName, nameWithoutSpace);\n\n        if (response && response.data && response.status === 200) {\n\n            yield put({ type: Types.ADD_SEARCH_LIST, payload: response.data });\n\n\n        } else\n            yield put({ type: Types.FAILURE, error: { message: '' } });\n\n    } catch (error) {\n        console.log('ERROR', error)\n        yield put({ type: Types.FAILURE, error: { message: '' } });\n    }\n}\n\n\nfunction* requestCharactersList(action) {\n    try {\n\n        let response = yield call(getCharacterList, action);\n\n        if (response && response.data && response.status === 200) {\n            yield put({ type: Types.SUCCESS, payload: response.data });\n\n        } else\n            yield put({ type: Types.FAILURE, error: { message: '' } });\n\n    } catch (error) {\n        console.log('ERROR', error)\n        yield put({ type: Types.FAILURE, error: { message: '' } });\n    }\n}\n\n\nexport const characterSagas = [\n    takeLatest(Types.REQUEST_LIST, requestCharactersList),\n    takeLatest(Types.REQUEST_SEARCH, requestCharacterByNameGeneral),\n]\n","import { characterSagas } from './character'\n\nimport { all } from 'redux-saga/effects'\n\nexport default function* rootSaga() {\n    yield all([\n        ...characterSagas,\n\n    ])\n}","import { applyMiddleware, compose, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport history from '../routes/history';\nimport createRootReducer from './ducks'\nimport rootSaga from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware();\nconst routeMiddleware = routerMiddleware(history);\n\n\nconst store = createStore(\n    createRootReducer(history), // root reducer with router state\n    compose(\n        applyMiddleware(\n            routeMiddleware, // for dispatching history actions\n            sagaMiddleware\n        ),\n    ),\n);\nsagaMiddleware.run(rootSaga)\n\nexport default store;\n\n\n\n","import React from 'react'\nimport './style.css';\nimport { TiStarFullOutline } from 'react-icons/ti';\n\n\n\nconst CardCharacter = (props) => {\n  const { item } = props;\n  const image = item.img;\n\n  /**\n   * Status\n   */\n  let status = {}\n  if (item.status === 'Presumed dead')\n    status = { class: 'tag tag-status__rip', text: 'Morto*' }\n  else if (item.status === 'Deceased')\n    status = { class: 'tag tag-status__rip', text: 'Morto' }\n  else if (item.status === 'Alive')\n    status = { class: 'tag tag-status__alive', text: 'Vivo' }\n  else\n    status = { class: 'tag tag-status__unk', text: 'Desconhecido' }\n\n\n  return (\n    <div className=\"container\">\n      <span className={status.class}>{status.text}</span>\n      <img src={image} alt={item.name} />\n      <div className=\"content\">\n        <h2>{item.name}</h2>\n        <div className=\"birth\">\n          <TiStarFullOutline className='iconBirth' />\n          <span>{item.birthday}</span>\n        </div>\n        <p className=\"desc\">{item.occupation.join(\", \")}</p>\n      </div>\n    </div>\n\n\n  )\n}\n\nexport default CardCharacter\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Actions } from '../../store/ducks/character';\nimport './style.css';\nconst namesCharacters = require('../../utils/namesCharacters.json');\n\nconst Pagination = () => {\n\n    const dispatch = useDispatch();\n    const [pageActive, setPage] = useState(0);\n\n    const handleSetPage = (e, indx) => {\n        e.preventDefault();\n        setPage(indx);\n        dispatch(Actions.requestListCharacter(indx))\n    };\n\n    /**\n     * Por hora, definido de forma fixa.\n     */\n    const limitListPerPage = 8;\n    const pagesNum = [];\n\n    for (let i = 0; i <= Math.ceil((namesCharacters.length - 1) / limitListPerPage); i++) {\n        pagesNum.push(i);\n    }\n\n\n\n    return (\n\n        <div className='pagination'>\n            {pagesNum.map((indx) =>\n\n                // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                <a key={indx} href='#' onClick={e => handleSetPage(e, indx)} className={(pageActive === indx) ? \"active\" : ''}>{indx + 1}</a>\n\n            )}\n        </div>\n\n    )\n}\n\nexport default Pagination\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Actions } from '../../store/ducks/character'\nimport CardCharacter from '../../components/cardCharacter';\nimport Pagination from '../../components/pagination';\nimport './style.css'\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nconst Home = () => {\n  const characters = useSelector(state => state.character.data)\n  const dispatch = useDispatch();\n\n  const handleFetch = () => dispatch(Actions.requestListCharacter(0));\n\n  const onDidMount = () => {\n    handleFetch();\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => { onDidMount() }, []);\n\n  return (\n    <Grid fluid>\n      <Row>\n        <h1 className='titleHome'>Personagens</h1>\n      </Row>\n      <Row>\n        {characters && characters.length && characters.map((item, index) => (\n          <Col className='col-sm col-md col-lg' xs={12} s key={index} style={{ margin: '15px 0px' }}>\n            <CardCharacter key={index} item={item} className='cardItem' />\n          </Col>\n        ))}\n      </Row>\n      <Row className='containerPagination'>\n        <Pagination />\n      </Row>\n    </Grid>\n\n\n\n\n\n\n\n\n\n  )\n}\n\nexport default Home","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport CardCharacter from '../../components/cardCharacter';\nimport './style.css'\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nconst Search = () => {\n\n  const searchList = useSelector(state => state.character.searchResults)\n  const searchTerm = useSelector(state => state.character.searchTerm)\n\n  return (\n    <Grid fluid>\n      <Row>\n        <h1 className='titleSearch'>Você pesquisou por \"{searchTerm}\"</h1>\n      </Row>\n      <Row>\n        {searchList && searchList.length && searchList.map((item, index) => (\n          <Col xs={12} sm={6} md={6} lg={3} key={index} style={{ margin: '15px 0px' }}>\n            <CardCharacter key={index} item={item} className='cardItem' />\n          </Col>\n        ))}\n      </Row>\n    </Grid>\n  )\n}\n\nexport default Search","import React, { useState } from 'react'\nimport breakingBadLogo from '../../assets/Breaking_Bad_logo.svg'\nimport { FiSearch } from 'react-icons/fi';\nimport { useDispatch } from 'react-redux';\nimport { Actions } from '../../store/ducks/character'\nimport { Link } from 'react-router-dom'\n\nimport './style.css';\nconst Header = () => {\n\n  const dispatch = useDispatch();\n\n  const handleSearch = () => {\n    if (searchTerm && searchTerm.length >= 3)\n      dispatch(Actions.requestSearch(searchTerm))\n  }\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      console.log('teste')\n      setSearch(e.target.value);\n      handleSearch();\n    }\n  }\n\n  const [searchTerm, setSearch] = useState('');\n\n  return (\n    <header className='header'>\n      <Link to=\"/\">\n        <img src={breakingBadLogo} alt='Breaking Bad Logo' height='60' />\n      </Link>\n\n      <div className=\"searchContainer\">\n        <input type=\"text\" placeholder=\"Pesquise os personagens\"\n          onChange={e => setSearch(e.target.value)}\n          onKeyDown={handleKeyDown} />\n        <button onClick={handleSearch}><FiSearch /></button>\n      </div>\n\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport history from \"./history\";\n\nimport Home from \"../pages/home\";\nimport Search from \"../pages/search\";\nimport Header from '../components/header'\n\nconst Routes = () => (\n  <ConnectedRouter history={history}>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/search\" component={Search} />\n    </Switch>\n  </ConnectedRouter>\n);\n\nexport default Routes;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Routes from \"./routes\";\nimport './App.css'\n\nconst App = () => (\n  <Provider store={store}>\n    <div className='App'>\n      <Routes />\n    </div>\n  </Provider>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Breaking_Bad_logo.427a4adc.svg\";"],"sourceRoot":""}